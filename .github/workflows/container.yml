---

name: Container Workflow template"

on:
  workflow_call:
    secrets:
      BOT_ACCESS_TOKEN:
        description: 'The GitHub token for the bot account'
        required: true
      QUAY_USER:
        description: 'The username for the Quay account'
        required: false
      QUAY_TOKEN:
        description: 'The token for the Quay account'
        required: false
      MONDOO_SERVICE_ACCOUNT:
        description: 'The service account for the Mondo service'
        required: false
    inputs:
      release:
        description: 'also run release workflow'
        required: false
        type: boolean
        default: false
      dockerfile:
        description: 'The path to the Dockerfile'
        required: true
        type: string
        default: 'Dockerfile'
      score:
        description: 'The score threshold for the image'
        required: false
        type: number
        default: 60
      platforms:
        description: 'The platforms to build for'
        required: false
        type: string
        default: 'linux/amd64'
      image_name:
        description: 'The name of the image'
        required: false
        type: string
        default: ''
      image_repo:
        description: 'The repository of the image'
        required: false
        type: string
        default: ${{ github.repository_owner }}
      build_args:
        description: 'The build arguments for the image'
        required: false
        type: string
        default: ''

env:
  MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_SERVICE_ACCOUNT }}

jobs:

  pre-commit:
    uses: ./.github/workflows/pre-commit.yml
    secrets:
      BOT_ACCESS_TOKEN: ${{ secrets.BOT_ACCESS_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [pre-commit]
    steps:
    - uses: actions/checkout@v4

    - uses: go-semantic-release/action@v1
      id: semrel
      with:
        github-token: ${{ secrets.BOT_ACCESS_TOKEN }}
        prepend: true
        dry: true

    - name: Get directory of ${{ inputs.dockerfile }}
      id: get_dir
      run: |
        echo "docker_directory=$(dirname ${{ inputs.dockerfile }})" >> $GITHUB_OUTPUT
        env

    - name: Prepare tagging
      id: prep
      run: |
        IMAGE_NAME=$(basename ${{ github.repository }})
        IMAGE_REPO=${{ inputs.image_repo }}
        if [[ -n "${{ inputs.image_name }}" ]]; then
          IMAGE_NAME="${{ inputs.image_name }}"
        fi
        VERSION="dev"
        if [[ '${{ needs.pre-commit.outputs.version }}'  != '' ]]; then
          VERSION="${{ needs.pre-commit.outputs.version }}"
        fi
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION="nightly"
        fi
        GHCR_IMAGE="ghcr.io/${{ github.repository }}"
        TAGS="${GHCR_IMAGE}:${VERSION}"

        if [[ -n "${{ secrets.QUAY_USER }}" ]]; then
          QUAY_IMAGE="quay.io/$IMAGE_REPO/$IMAGE_NAME"
          tags="${TAGS}:${QUAY_IMAGE}:${VERSION}"
        fi

        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${GHCR_IMAGE}:latest"
          if [[ -n "${{ secrets.QUAY_USER }}" ]]; then
            TAGS="$TAGS,${QUAY_IMAGE}:latest"
          fi
        fi
        echo "settings tag ${TAGS}"
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "ghcr_tag=${GHCR_IMAGE}:${VERSION}" >> $GITHUB_OUTPUT
        echo "quay_user=${{ secrets.QUAY_USER }}" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Container Image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        load: true
        context: ${{ steps.get_dir.outputs.docker_directory }}
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.prep.outputs.tags }}
        build-args: ${{ inputs.build_args }}

    - name: Scan Docker Image
      if: env.MONDOO_CONFIG_BASE64 != ''
      uses: mondoohq/actions/docker-image@v11.0.0
      with:
          image: ${{ steps.prep.outputs.ghcr_tag }}
          score-threshold: ${{ inputs.score }}

    - name: Login to Quay
      if: needs.pre-commit.outputs.version != '' && steps.prep.outputs.quay_user != ''
      uses: docker/login-action@v3
      with:
         registry: quay.io
         username: ${{ secrets.QUAY_USER }}
         password: ${{ secrets.QUAY_TOKEN }}

    - name: Login to GitHub Container Registry
      if: needs.pre-commit.outputs.version != ''
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.BOT_ACCESS_TOKEN }}

    - name: Publish container
      if: needs.pre-commit.outputs.version != ''
      uses: docker/build-push-action@v5
      with:
          context: ${{ steps.get_dir.outputs.docker_directory }}
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' && needs.pre-commit.outputs.version != '' }}
          tags: ${{ steps.prep.outputs.tags }}
          platforms: ${{ inputs.platforms }}
          build-args: ${{ inputs.build_args }}

  release:
    needs: [ pre-commit, build ]
    if: inputs.release && github.event_name != 'pull_request'
    uses: ./.github/workflows/release.yml
    secrets:
      BOT_ACCESS_TOKEN: ${{ secrets.BOT_ACCESS_TOKEN }}
